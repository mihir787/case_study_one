setwd(/Users/mihirparikh/school/6306_doing_ds/case_study_one)
setwd("/Users/mihirparikh/school/6306_doing_ds/case_study_one")
library(dplyr)
library(ggplot2)
#read in csv files and normalize column names
Beers <- read.csv("Beers.csv", sep = ",")
colnames(Beers) <- c("Name", "Beer_id", "ABV", "IBU", "Brewery_id", "Style", "Ounces")
Breweries <- read.csv("Breweries.csv", sep = ",")
colnames(Breweries) <- c("Brewery_id", "Name", "City", "State")
# a. How many breweries in each state?
summary(Breweries)
table(Breweries$State)
# b. Merge beer data with the breweries data. Print the first 6 observations and the last six observations to check the merged file
brewDataMerged <- merge(Beers, Breweries, by = "Brewery_id", all = TRUE)
head(brewDataMerged, 6)
tail(brewDataMerged, 6)
# c. Report the number of NA's in Each Column
sapply(brewDataMerged, function(x) sum(length(which(is.na(x)))))
# d. Compute the median alcohol content and international bitterness unit for each state. Plot a bar chart to compare.
stateGrouped <- group_by(brewDataMerged, State)
summarizedGroup <- summarize(stateGrouped, Median_alcohol = median(ABV, na.rm = TRUE), Median_IBU = median(IBU, na.rm = TRUE))
ggplot(data = summarizedGroup) + geom_bar(mapping = aes(x= State, y= Median_alcohol), stat="identity")
ggplot(data = summarizedGroup) + geom_bar(mapping = aes(x= State, y= Median_IBU), stat="identity")
# e.
#state with most alcoholic beer?
brewDataMerged[which.max(brewDataMerged$ABV),]
#state witb most bitter beer
brewDataMerged[which.max(brewDataMerged$IBU),]
#f. summary for ABV statistic
summary(brewDataMerged$ABV)
#g. relationship between the bitterness of the beer and its alcoholic content? Draw a scatter plot.
ggplot(brewDataMerged, aes(IBU, ABV))+
ggtitle("International Bitterness Units (IBU) vs. Alcohol Content (ABV)") +
geom_point(color="green") +
geom_smooth(method=lm,  se=FALSE, color="blue")
distinct(brewDataMerged)
distinct(brewDataMerged)
distinct
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(ggplot2)
#read in csv files and normalize column names
Beers <- read.csv("Beers.csv", sep = ",")
colnames(Beers) <- c("Name", "Beer_id", "ABV", "IBU", "Brewery_id", "Style", "Ounces")
Breweries <- read.csv("Breweries.csv", sep = ",")
colnames(Breweries) <- c("Brewery_id", "Name", "City", "State")
# a. How many breweries in each state?
summary(Breweries)
table(Breweries$State)
# b. Merge beer data with the breweries data. Print the first 6 observations and the last six observations to check the merged file
brewDataMerged <- merge(Beers, Breweries, by = "Brewery_id", all = TRUE)
head(brewDataMerged, 6)
tail(brewDataMerged, 6)
# c. Report the number of NA's in Each Column
sapply(brewDataMerged, function(x) sum(length(which(is.na(x)))))
# d. Compute the median alcohol content and international bitterness unit for each state. Plot a bar chart to compare.
stateGrouped <- group_by(brewDataMerged, State)
summarizedGroup <- summarize(stateGrouped, Median_alcohol = median(ABV, na.rm = TRUE), Median_IBU = median(IBU, na.rm = TRUE))
ggplot(data = summarizedGroup) + geom_bar(mapping = aes(x= State, y= Median_alcohol), stat="identity")
ggplot(data = summarizedGroup) + geom_bar(mapping = aes(x= State, y= Median_IBU), stat="identity")
# e.
#state with most alcoholic beer?
brewDataMerged[which.max(brewDataMerged$ABV),]
#state witb most bitter beer
brewDataMerged[which.max(brewDataMerged$IBU),]
#f. summary for ABV statistic
summary(brewDataMerged$ABV)
#g. relationship between the bitterness of the beer and its alcoholic content? Draw a scatter plot.
ggplot(brewDataMerged, aes(IBU, ABV))+
ggtitle("International Bitterness Units (IBU) vs. Alcohol Content (ABV)") +
geom_point(color="green") +
geom_smooth(method=lm,  se=FALSE, color="blue")
distinct(brewDataMerged)
View(Beers)
View(Breweries)
agrep("lasy", "1 lazy 2")
agrep("lasy", "bacon")
agrep("lasy", "lasy")
?apply
brewDataMerged
View(brewDataMerged)
colnames(brewDataMerged)
colnames(brewDataMerged) <- c("Brewery_id", "Beer_name", "Beer_id", "ABV", "IBU", "Style", "Ounces", "Brewery_name", "City", "State")
View(brewDataMerged)
summary(brewDataMerged)
source('~/school/6306_doing_ds/case_study_one/scratchwork.R')
namestotest <- Breweries$Name
duptable = data.frame(Index=as.numeric(),Name=as.character())
duptable
for (i in 1:length(namestotest)){
# Find potential duplicates
dup = agrep(namestotest[i],namestotest[-i],ignore.case = T, value = T, max.distance = .1, useBytes=FALSE)
name = ifelse(length(dup)>0,dup,"OK")
dupoccurance = data.frame(Index=i,Name = name)
duptable = rbind(duptable,dupoccurance)
}
duptable=subset(duptable,duptable$Name!="OK")
duptable = duptable[order(duptable$Name),] # Sort to find true duplicates
head(duptable)
View(duptable)
source('~/school/6306_doing_ds/case_study_one/scratchwork.R')
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
Breweries <- read.csv("Breweries.csv", header=TRUE, sep = ',', stringsAsFactors = FALSE)
# Check City spelling
Breweries <- Breweries[with(Breweries, order(State,City,Name)),]
BreweriesClean <- Breweries
BreweriesClean <- BreweriesClean[with(BreweriesClean, order(Brew_ID)),]
# Misspelled City Names, researched official spelling
BreweriesClean[c(59,139),3] <- "Saint Paul"
BreweriesClean[130,3] <- "St. Marys"
BreweriesClean[68,3] <- "St. Petersburg"
BreweriesClean[339,3] <- "St. Johns"
BreweriesClean[c(378,457),3] <- "Menomonie"
BreweriesClean[69,3] <- "Mount Airy"
BreweriesClean[385,3] <- "Mount Pleasant"
# Incorrect State for given City
BreweriesClean[96,4] <- "MI"
# Check for duplicate Breweries after removing Brewery and Brewing Company
BreweriesClean$BrewDups = BreweriesClean$Name
# Remove "Brewery", "Brewing Company", "Brewing", "Beer Co.",
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Brewery", "")
library(stringr)
library(tidyverse)
library(ggplot2)
Breweries <- read.csv("Breweries.csv", header=TRUE, sep = ',', stringsAsFactors = FALSE)
# Check City spelling
Breweries <- Breweries[with(Breweries, order(State,City,Name)),]
BreweriesClean <- Breweries
BreweriesClean <- BreweriesClean[with(BreweriesClean, order(Brew_ID)),]
# Misspelled City Names, researched official spelling
BreweriesClean[c(59,139),3] <- "Saint Paul"
BreweriesClean[130,3] <- "St. Marys"
BreweriesClean[68,3] <- "St. Petersburg"
BreweriesClean[339,3] <- "St. Johns"
BreweriesClean[c(378,457),3] <- "Menomonie"
BreweriesClean[69,3] <- "Mount Airy"
BreweriesClean[385,3] <- "Mount Pleasant"
# Incorrect State for given City
BreweriesClean[96,4] <- "MI"
# Check for duplicate Breweries after removing Brewery and Brewing Company
BreweriesClean$BrewDups = BreweriesClean$Name
# Remove "Brewery", "Brewing Company", "Brewing", "Beer Co.",
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Brewery", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Brewing", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Beer", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Cider", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "Company", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, "co.", "")
BreweriesClean$BrewDups <- str_replace_all(BreweriesClean$BrewDups, " ", "")
# Convert all characters to lower so we can better find potential duplicates
BreweriesClean$BrewDups <- tolower(BreweriesClean$BrewDups)
# Paste Name converted to lower, City, and State for matching duplicates
BreweriesClean <- unite(BreweriesClean, BrewDupsFreq, BrewDups, City, State, sep = ",", remove = FALSE)
# Determine if multiples are present
dupNames <- as.data.frame(table(BreweriesClean$BrewDupsFreq))
dupNames <- subset(dupNames, dupNames$Freq>1)
BreweriesCleanDups <- BreweriesClean[BreweriesClean$BrewDupsFreq %in%  dupNames$Var1,]
BreweriesCleanDups <- BreweriesCleanDups[order(BreweriesCleanDups$BrewDupsFreq),]
# Review results
BreweriesCleanDups
# Fix based on observations and other data discovery
BreweriesClean[2,2] <- "Against The Grain Brewery"
BreweriesClean[147,2] <- "Angrew Minnow Brewing Company"
BreweriesClean[197,2] <- "Goose Island Brewing Company"
BreweriesClean[380,2] <- "Grey Sail Brewing Company"
BreweriesClean[396,2] <- "Hops & Grains Brewing Company"
# Brew_ID with Duplicate Rows: 2 & 63, 89 & 197, 147 & 543, 378 & 457, 59 & 139
BreweriesClean$BrewDupsFreq <- NULL
BreweriesClean$BrewDups <- NULL
